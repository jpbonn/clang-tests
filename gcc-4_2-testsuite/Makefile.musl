#
# equivalent gcc command:
# lm32-rtems4.11-gcc -T$board_dir/musl.ld -nostartfiles -nostdinc -nostdlib -nodefaultlibs -w -L$board_dir z.c -o z.gcc.exe -L/opt/rtems-4.11/lib/gcc/lm32-rtems4.11/4.5.3 -lgcc
#

host := lm32-bare-elf
build := lm32-bare-elf
target := lm32-bare-elf
srcdir := $(shell pwd)/src
objdir := $(shell pwd)/obj

compiler_rt_dir := /home/jp/Documents/origin2/compiler-rt/lm32/emb/
# use the clang compiled newlib
NEWLIB_INCDIR=/home/jp/Documents/origin2/musl/include
NEWLIB_LIBDIR=/home/jp/Documents/origin2/musl/lib
START_FILES_DIR=/home/jp/Documents/origin2/musl/lib
board_dir := $(shell pwd)

CCC_ADD_ARGS := -ccc-clang-cxx,-Qunused-arguments,-std-default=gnu89,-ferror-limit=0,-fmessage-length=0,-fno-color-diagnostics,-fno-caret-diagnostics,-Wno-unused-value,-Wno-return-type,-Wno-constant-logical-operand,-fno-verbose-asm,-march=lm32,-target lm32,-ccc-gcc-name lm32-rtems4.11-gcc
CCC_ADD_ARGS := -ccc-clang-cxx,-Qunused-arguments,-std-default=gnu89,-ferror-limit=0,-fmessage-length=0,-fno-color-diagnostics,-fno-caret-diagnostics,-Wno-unused-value,-Wno-return-type,-Wno-constant-logical-operand,-fno-verbose-asm,-march=lm32,-target lm32,-ccc-gcc-name lm32-rtems4.11-gcc -L$(compiler_rt_dir) -lcompiler_rt 

# args we need:
# /home/jpbonn/Documents/lm32/install2/bin/clang -march=lm32 -target lm32 -ccc-gcc-name lm32-rtems4.11-gcc -Tmusl.ld -nostdinc -nostdlib -nodefaultlibs -w -fnested-functions -O0 -DSTACK_SIZE=200 -DMAX_ITER=1000 crt.o main.c -o main.tst

CFLAGS_FOR_CRT:=-march=lm32 -target lm32 -ccc-gcc-name lm32-rtems4.11-gcc -T$(board_dir)/musl.ld -nostartfiles -nodefaultlibs -w -fnested-functions -L$(board_dir) -L$(compiler_rt_dir) -I$(NEWLIB_INCDIR) -L$(NEWLIB_LIBDIR)
CFLAGS_FOR_TARGET:= $(CFLAGS_FOR_CRT) -lc -lcompiler_rt

LDFLAGS_FOR_TARGET:=-march=lm32 -target lm32 -ccc-gcc-name lm32-rtems4.11-gcc -T$(board_dir)/musl.ld -nostartfiles -nostdinc -nostdlib -nodefaultlibs -w -fnested-functions -L$(board_dir)
LDFLAGS_FOR_TARGET:=-march=lm32 -target lm32 -ccc-gcc-name lm32-rtems4.11-gcc -T$(board_dir)/musl.ld -nostartfiles -nodefaultlibs -w -fnested-functions -L$(board_dir) -L$(compiler_rt_dir) -lcompiler_rt

#CC_UNDER_TEST := /home/jpbonn/Documents/lm32/install/bin/clang
#CXX_UNDER_TEST := /home/jpbonn/Documents/lm32/install/bin/clang++
CC_UNDER_TEST := /home/jp/Documents/origin2/build2/Debug+Asserts/bin/clang
CXX_UNDER_TEST := /home/jp/Documents/origin2/build2/Debug+Asserts/bin/clang++
CC_UNDER_TEST := clang
CXX_UNDER_TEST := clang++
ALT_CC_UNDER_TEST := lm32-rtems4.11-gcc
ALT_CXX_UNDER_TEST := lm32-rtems4.11-g++
COMPAT_OPTIONS := [list [list {-m64} {-m64}] [list {-m32} {-m32}]]

# You can override RUNTESTFLAGS to pass options to 'runtest', as in the GCC make
# check configurations.
#RUNTESTFLAGS :=
#RUNTESTFLAGS:="execute.exp --verbose --target_board=clang-sim "
#RUNTESTFLAGS:="execute.exp GCC_UNDER_TEST=mcc GCC=mcc --verbose --target_board=clang-sim "
#RUNTESTFLAGS:="execute.exp --target_board=clang-sim "
#RUNTESTFLAGS:="execute.exp GCC_UNDER_TEST=mcc GCC=mcc TORTURE_OPTIONS=\"[ { -O0 } { -O1 } { -O3 } ]\" --target_board=clang-sim --strace 9 --debug -v -v -v -v -v -v -v -v -v -v -v "
#RUNTESTFLAGS:="execute.exp GCC_UNDER_TEST=mcc GCC=mcc --target_board=clang-sim "
#RUNTESTFLAGS:="execute.exp=980709-1.c GCC_UNDER_TEST=mcc GCC=mcc --target_board=clang-sim "
RUNTESTFLAGS:="--verbose --target_board=clang-sim "
RUNTESTFLAGS:="--target_board=clang-sim "
#RUNTESTFLAGS:=execute.exp=switch-1.c --verbose --target_board=clang-sim --strace 9 --debug -v -v -v -v -v -v -v
#RUNTESTFLAGS:=execute.exp=20000121-1.c --verbose --target_board=clang-sim --strace 9 --debug -v -v -v -v -v -v -v
RUNTESTFLAGS:=execute.exp --target_board=clang-sim
#RUNTESTFLAGS:=execute.exp=builtin_constant.c --target_board=clang-sim 

TESTSUITEDIR := src

site.exp:
	@echo "Making a new config file..."
	-@rm -f ./tmp?
	@touch site.exp
	-@mv site.exp site.bak
	@echo "## these variables are automatically generated by make ##" > ./tmp0
	@echo "# Do not edit here. If you wish to override these values" >> ./tmp0
	@echo "# add them to the last section" >> ./tmp0
	@echo "set srcdir \"${srcdir}\"" >> ./tmp0
	@echo "set tmpdir \"${objdir}\"" >> ./tmp0
	@echo "set host_triplet $(host)" >> ./tmp0
	@echo "set build_triplet $(build)" >> ./tmp0
	@echo "set target_triplet $(target)" >> ./tmp0
	@echo "set target_alias $(target)" >> ./tmp0
	@echo "set CFLAGS \"$(CFLAGS)\"" >> ./tmp0
#	@echo "set CFLAGS \"\"" >> ./tmp0
	@echo "set CXXFLAGS \"\"" >> ./tmp0
	@echo "set HOSTCC \"$(CC_UNDER_TEST)\"" >> ./tmp0
	@echo "set HOSTCFLAGS \"$(CFLAGS)\"" >> ./tmp0
#	@echo "set HOSTCFLAGS \"\"" >> ./tmp0
	@echo "set HAVE_LIBSTDCXX_V3 1" >> ./tmp0
	@echo "set GCC_UNDER_TEST \"$(CC_UNDER_TEST)\"" >> ./tmp0;
	@echo "set GXX_UNDER_TEST \"$(CXX_UNDER_TEST)\"" >> ./tmp0;
	@echo "set OBJC_UNDER_TEST \"$(CC_UNDER_TEST)\"" >> ./tmp0;
	@echo "set OBJCXX_UNDER_TEST \"$(CXX_UNDER_TEST)\"" >> ./tmp0;
	@echo "set ALT_CC_UNDER_TEST \"$(ALT_CC_UNDER_TEST)\"" >> ./tmp0;
	@echo "set ALT_CXX_UNDER_TEST \"$(ALT_CXX_UNDER_TEST)\"" >> ./tmp0;
	@echo "set COMPAT_OPTIONS \"$(COMPAT_OPTIONS)\"" >> ./tmp0;
	@echo "lappend boards_dir \"$(board_dir)\"" >> ./tmp0;
	@echo "set CFLAGS_FOR_TARGET \"$(CFLAGS_FOR_TARGET)\"" >> ./tmp0;
	@echo "set LDFLAGS_FOR_TARGET \"$(LDFLAGS_FOR_TARGET)\"" >> ./tmp0;
	@echo "## All variables above are generated by configure. Do Not Edit ##" >> ./tmp0
	@cat ./tmp0 > site.exp
	@cat site.bak | sed \
		-e '1,/^## All variables above are.*##/ d' >> site.exp
	-@rm -f ./tmp?
.PHONY: site.exp

# this doesn't properly pass the "make -f" flags and can cause site.exp to be built
# incorrectly
#check:
#	$(MAKE) -k check-gcc check-g++ check-objc check-obj-c++
#.PHONY: check

save-results:
	if [ -z "$(VERSION)" ]; then \
	  echo "usage: make $@ VERSION=107"; \
	  exit 1; \
	fi
	mkdir -p results
	rm -f results/clang-$(VERSION).sum
	for i in gcc g++ objc obj-c++; do \
	  cat obj/$$i/$$i.sum >> results/clang-$(VERSION).sum; \
	done

check-%: obj/.dir obj/%/.dir site.exp
	@hash qemu-wrapper 2>&- || { echo >&2 "ERROR: qemu-wrapper must be on the absolute PATH and executable. Aborting."; exit 1; }
	@cp site.exp ${objdir}/$*
	(cd ${objdir}/$* && \
	 runtest --tool $* $(RUNTESTFLAGS))
#	 env CCC_ADD_ARGS="$(CCC_ADD_ARGS)" runtest --tool $* $(RUNTESTFLAGS))
.PHONY: check-%

clean:
	rm -rf *.o obj site.exp site.bak
.PHONY: clean

%/.dir:
	@mkdir -p $* > /dev/null
	@echo "Created." > $@
.PRECIOUS: %/.dir
