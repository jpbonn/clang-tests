#
# In cmake when building llvm set LLVM_TARGETS_TO_BUILD to LM32
# CMAKE_INSTALL_PREFIX /to/desired/location
#
# ensure clang under test is first on PATH
#  make -f Makefile.mico32 check-gcc
#
# The "WARNING: Couldn't find the global config file." can be ignored.
#

host := lm32-elf
build := lm32-elf
target := lm32-elf
runtest_target := lm32-*-elf
srcdir := $(shell pwd)/src
objdir := $(shell pwd)/obj
# Where lm32 gcc has been installed (needed for as , ld )
GCC_SYSROOT=/opt/lm32bin/bin

compiler_rt_dir := /Users/jpbonn/Documents/artiq2/head/compiler-rt-lm32/lm32/lm32/
# use the clang compiled newlib
NEWLIB_DIR=/Users/jpbonn/Documents/artiq2/head/nl/install/lm32-elf/
NEWLIB_LIBDIR=$(NEWLIB_DIR)/lib
LIBGLOSS_DIR=/Users/jpbonn/Documents/artiq2/head/nl/install/lm32-elf/

board_dir := $(shell pwd)

# needed libraries:
# test specific crt - start up and initialization of LM32, provides exit(), abort(), and test support functions.
# compiler_rt - run-time math functions etc not supported by LM32 hardware
# gloss - system calls to qemu semihosting
# c - for malloc()
# nosys - for _sbrk()

CCC_ADD_ARGS :=  --sysroot=$(GCC_SYSROOT) -ccc-clang-cxx,-Qunused-arguments,-std-default=gnu89,-ferror-limit=0,-fmessage-length=0,-fno-color-diagnostics,-fno-caret-diagnostics,-Wno-unused-value,-Wno-return-type,-Wno-constant-logical-operand,-fno-verbose-asm,-target $(target),-ccc-gcc-name lm32-elf-gcc -L$(compiler_rt_dir) -lcompiler_rt 

CFLAGS_FOR_CRT:= -g -target $(target) -ccc-gcc-name lm32-elf-gcc -T$(board_dir)/linker.ld -nostartfiles -nodefaultlibs  -ffreestanding -w -L$(board_dir) -L$(compiler_rt_dir) -I$(NEWLIB_DIR)/include -L$(NEWLIB_LIBDIR) -L$(LIBGLOSS_DIR)
CFLAGS_FOR_TARGET:= $(CFLAGS_FOR_CRT) -lcrt -lc -lm -lcompiler_rt -lgloss -lnosys

LDFLAGS_FOR_TARGET:= -target $(target) -ccc-gcc-name lm32-elf-gcc -T$(board_dir)/linker.ld -nostartfiles -nodefaultlibs -w -L$(board_dir) -lcrt -L$(compiler_rt_dir) -lcompiler_rt -lgloss -lnosys

CC_UNDER_TEST := clang
CXX_UNDER_TEST := clang++

# You can override RUNTESTFLAGS to pass options to 'runtest', as in the GCC make
# check configurations.
# -v -v will echo the compiler invocation.
#RUNTESTFLAGS :=
#RUNTESTFLAGS:="execute.exp --verbose --target_board=clang-sim "
#RUNTESTFLAGS:="execute.exp TORTURE_OPTIONS=\"[ { -O0 } { -O1 } { -O3 } ]\" --target_board=clang-sim --strace 9 --debug -v -v -v -v -v -v -v -v -v -v -v "
#RUNTESTFLAGS:=execute.exp=switch-1.c --verbose --target_board=clang-sim --strace 9 --debug -v -v -v -v -v -v -v
#RUNTESTFLAGS:=execute.exp=builtin_constant.c --verbose --debug --target_board=clang-sim 
#RUNTESTFLAGS:=execute.exp=builtin_constant.c 
RUNTESTFLAGS:=execute.exp --target_board=clang-sim 

TESTSUITEDIR := src

site.exp:
	@echo "Making a new config file..."
	-@rm -f ./tmp?
	@touch site.exp
	-@mv site.exp site.bak
	@echo "## these variables are automatically generated by make ##" > ./tmp0
	@echo "# Do not edit here. If you wish to override these values" >> ./tmp0
	@echo "# add them to the last section" >> ./tmp0
	@echo "set srcdir \"${srcdir}\"" >> ./tmp0
	@echo "set tmpdir \"${objdir}\"" >> ./tmp0
	@echo "set host_triplet $(host)" >> ./tmp0
	@echo "set build_triplet $(build)" >> ./tmp0
# This sets the triplet used in the test cases. (--target= in RUNTESTFLAGS)
#	@echo "set target_triplet $(runtest_target)" >> ./tmp0
	@echo "set target_alias $(target)" >> ./tmp0
	@echo "set CFLAGS \"$(CFLAGS)\"" >> ./tmp0
	@echo "set CXXFLAGS \"\"" >> ./tmp0
	@echo "set HOSTCC \"$(CC_UNDER_TEST)\"" >> ./tmp0
	@echo "set HOSTCFLAGS \"$(CFLAGS)\"" >> ./tmp0
	@echo "set HAVE_LIBSTDCXX_V3 1" >> ./tmp0
	@echo "set GCC_UNDER_TEST \"$(CC_UNDER_TEST)\"" >> ./tmp0;
	@echo "set GXX_UNDER_TEST \"$(CXX_UNDER_TEST)\"" >> ./tmp0;
	@echo "set OBJC_UNDER_TEST \"$(CC_UNDER_TEST)\"" >> ./tmp0;
	@echo "set OBJCXX_UNDER_TEST \"$(CXX_UNDER_TEST)\"" >> ./tmp0;
	@echo "lappend boards_dir \"$(board_dir)\"" >> ./tmp0;
	@echo "set CFLAGS_FOR_TARGET \"$(CFLAGS_FOR_TARGET)\"" >> ./tmp0;
	@echo "set LDFLAGS_FOR_TARGET \"$(LDFLAGS_FOR_TARGET)\"" >> ./tmp0;
	@echo "## All variables above are generated by configure. Do Not Edit ##" >> ./tmp0
	@cat ./tmp0 > site.exp
	@cat site.bak | sed \
		-e '1,/^## All variables above are.*##/ d' >> site.exp
	-@rm -f ./tmp?
.PHONY: site.exp

# this doesn't properly pass the "make -f" flags and can cause site.exp to be built
# incorrectly
#check:
#	$(MAKE) -k check-gcc check-g++ check-objc check-obj-c++
#.PHONY: check

save-results:
	if [ -z "$(VERSION)" ]; then \
	  echo "usage: make $@ VERSION=107"; \
	  exit 1; \
	fi
	mkdir -p results
	rm -f results/clang-$(VERSION).sum
	for i in gcc g++ objc obj-c++; do \
	  cat obj/$$i/$$i.sum >> results/clang-$(VERSION).sum; \
	done

libcrt.a:	crt.s
	$(CC_UNDER_TEST) $(CFLAGS_FOR_CRT) $< -c
	@cp crt.o libcrt.a
	
check-%: obj/.dir obj/%/.dir site.exp libcrt.a
	@hash clang 2>&- || { echo >&2 "ERROR: clang must be on the PATH. Aborting."; exit 1; }
	@hash qemu-wrapper 2>&- || { echo >&2 "ERROR: qemu-wrapper must be on the PATH and executable. Aborting."; exit 1; }
	@hash runtest 2>&- || { echo >&2 "ERROR: runtest (from Dejagnu package) must be on the PATH. Aborting."; exit 1; }
	@echo "Testing:"
	@clang --version -target lm32-elf
	@cp site.exp ${objdir}/$*
	(cd ${objdir}/$* && \
	 runtest --tool $* $(RUNTESTFLAGS))
#	 env CCC_ADD_ARGS="$(CCC_ADD_ARGS)" runtest --tool $* $(RUNTESTFLAGS))
.PHONY: check-%

clean:
	rm -rf *.o libcrt.a obj site.exp site.bak
.PHONY: clean

%/.dir:
	@mkdir -p $* > /dev/null
	@echo "Created." > $@
.PRECIOUS: %/.dir
